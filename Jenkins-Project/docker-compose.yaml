services:
  ecr-login:
      image: amazon/aws-cli
      entrypoint: /bin/bash -c "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 058264318400.dkr.ecr.us-east-1.amazonaws.com"
    
    # PostgreSQL Container
  postgres:
      image: 058264318400.dkr.ecr.us-east-1.amazonaws.com/postgres-image:9
      container_name: todo_postgre
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: Pp123456789
        POSTGRES_DB: techprotodo
      ports:
        - 5432:5432
      volumes:
        - postgres_data:/var/lib/postgresql/data
  
    # Node.js Backend Container
  backend:
      image: 058264318400.dkr.ecr.us-east-1.amazonaws.com/nodejs-image:9
      container_name: todo_backend
      environment:
        SERVER_PORT: 5000
        DB_USER: postgres
        DB_PASSWORD: Pp123456789
        DB_NAME: techprotodo
        DB_HOST: postgres
        DB_PORT: 5432
      ports:
        - 5000:5000
      depends_on:
        - postgres
      command: bash -c "npm install && npm run start"
  
  
  # React Frontend Container
  frontend:
      image: 058264318400.dkr.ecr.us-east-1.amazonaws.com/react-images:9
      container_name: todo_frontend
      environment:
        REACT_APP_BASE_URL: "http://${PUBLIC_IP}:5000/"
      ports:
        - 3000:3000
      depends_on:
        - backend
  
      
      command: bash -c "npm install && npm start"
  
  volumes:
    postgres_data:
  networks:
    jenkins_project:
